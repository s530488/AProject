{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-user/add-user.component.css","webpack:///./src/app/add-user/add-user.component.html","webpack:///./src/app/add-user/add-user.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common/data.service.ts","webpack:///./src/app/common/list.ts","webpack:///./src/app/list-users/list-users.component.css","webpack:///./src/app/list-users/list-users.component.html","webpack:///./src/app/list-users/list-users.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<head>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://www.w3schools.com/w3css/4/w3.css\\\">\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\\\">\\n  </head>\\n  <div class=\\\"row justify-content-md-center\\\">\\n    <div [ngSwitch]=\\\"step\\\">\\n      <div *ngSwitchCase=\\\"1\\\">\\n        <div>\\n          <h1 class=\\\"text-center\\\">Personal Information</h1>\\n          <form (ngSubmit)=\\\"moveToStep2(userObj)\\\">\\n            <div class=\\\"w3-container\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleFormControlInput1\\\">Make:   </label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Make\\\" [(ngModel)]=\\\"userObject.Make\\\" id=\\\"exampleFormControlInput1\\\" placeholder=\\\"Enter the make details\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"w3-container\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleFormControlInput2\\\">Model:   </label>&nbsp;&nbsp;\\n                <select name=\\\"Model\\\" [(ngModel)]=\\\"userObject.Model\\\" id=\\\"exampleFormControlInput2\\\">\\n                        <option value=\\\"Civic\\\">Civic</option>\\n                        <option value=\\\"Oddyssey\\\">Oddyssey</option>\\n                        <option value=\\\"Pilot\\\">Pilot</option>\\n                        <option value=\\\"Accord\\\">Accord</option>\\n                    </select>\\n              </div>\\n            </div>\\n  \\n            <div class=\\\"w3-container\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleFormControlInput3\\\">Year:  </label>\\n                <input type=\\\"Number\\\" class=\\\"form-control\\\" name=\\\"Year\\\" [(ngModel)]=\\\"userObject.Year\\\" id=\\\"exampleFormControlInput3\\\" placeholder=\\\"Enter the year\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"w3-container\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleFormControlInput4\\\">Type:  </label>\\n  \\n                <label class=\\\"radio-inline\\\">\\n                <input type=\\\"radio\\\" name=\\\"Type\\\" [(ngModel)]=\\\"userObject.Type\\\" id=\\\"exampleFormControlInput4S\\\" value=\\\"Sedan\\\">&nbsp; Sedan</label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n                <label class=\\\"radio-inline\\\">\\n                <input type=\\\"radio\\\" name=\\\"Type\\\" [(ngModel)]=\\\"userObject.Type\\\" id=\\\"exampleFormControlInput4C\\\" value=\\\"Coupe\\\"> &nbsp; Coupe</label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n              </div>\\n            </div>\\n  \\n            <div class=\\\"w3-container\\\">\\n              <div class=\\\"col-xs-4 form-group\\\">\\n                <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Next</button>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n  \\n  \\n      <div *ngSwitchCase=\\\"2\\\">\\n        <div>\\n          <h1 class=\\\"text-center\\\">Booking Information</h1>\\n          <br>\\n          <form (ngSubmit)=\\\"submitForm(userObj)\\\">\\n  \\n            <div class=\\\"w3-container\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleFormControlInput5\\\">Features</label>\\n                <br>\\n                <div class=\\\"form-check form-check-inline\\\">\\n                  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" name=\\\"features\\\" (change)=\\\"addFeatures('GPS')\\\" id=\\\"inlineCheckbox1\\\" value=\\\"option1\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"features\\\">GPS</label>\\n                </div>\\n                <div class=\\\"form-check form-check-inline\\\">\\n                  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" name=\\\"features\\\" (change)=\\\"addFeatures('Security Lock')\\\" id=\\\"inlineCheckbox2\\\"\\n                    value=\\\"option2\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"features\\\">Security Lock</label>\\n                </div>\\n                <div class=\\\"form-check form-check-inline\\\">\\n                  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" name=\\\"features\\\" (change)=\\\"addFeatures('Cargo Mat')\\\" id=\\\"inlineCheckbox3\\\"\\n                    value=\\\"option2\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"features\\\">Cargo Mat</label>\\n                </div>\\n              </div>\\n            </div>\\n  \\n  \\n            <div class=\\\"w3-container\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleFormControlInput6\\\">Purchase Date</label>\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"sd\\\" [(ngModel)]=\\\"userObject.PurchaseDate\\\" id=\\\"exampleFormControlInput6\\\">\\n              </div>\\n            </div>\\n  \\n  \\n            <div class=\\\"w3-container\\\">\\n              <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Submit form</button>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n  \\n  \\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../common/list';\nimport { DataService } from '../common/data.service';\nimport { Router } from '@angular/router';\nimport { tick } from '@angular/core/src/render3';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n  step:string\n  userObject:User\n  features = []\n\n  constructor( private dataService : DataService, private route: Router)\n  {\n\n  }\n\n  ngOnInit() {\n    this.step=\"1\"\n    this.userObject= new User;\n    }\n\n    addFeatures(item){\n      if(this.features.includes(item)){\n        this.features.splice(this.features.indexOf(item),1)\n      }else{\n        this.features.push(item)\n      }\n      \n    }\n\n    moveToStep2(user){\n      console.log(user)\n      this.step = \"2\"\n    }\n    \n  submitForm(user){\n    console.log(this.userObject);\n    this.userObject.Features = this.features.toString();\n    this.dataService.addUser(this.userObject)\n      .subscribe(data => {\n        console.log(data)\n        this.route.navigate([\"/listUser\"]);\n      },\n    err=>{\n      console.log(\"error\",err)\n    })\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { ListUsersComponent } from './list-users/list-users.component';\n\nconst routes: Routes = [\n  {    path: 'addUser', component:AddUserComponent  },\n  {    path: 'listUser', component: ListUsersComponent},\n  {    path: '', redirectTo: \"/addUser\",pathMatch:\"full\"}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { ListUsersComponent } from './list-users/list-users.component';\nimport {FormsModule} from '@angular/forms'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddUserComponent,\n    ListUsersComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http:HttpClient) { }\n\n  addUser(item){\n    // return this.http.post(\"http://localhost:3000/saveCar\",item)\n    return this.http.post(\"https://projectproject.herokuapp.com/saveCar\",item)\n  }\n\n  getUserDetail()\n  {\n    // return this.http.get(\"http://localhost:3000/getCarList\")\n    return this.http.get(\"https://projectproject.herokuapp.com/getCarLast\")\n  }\n}\n","export class User {\r\n    Make: string;\r\n    Model: string;\r\n    Year:Number;\r\n    Type:String;\r\n    Features: String;\r\n    PurchaseDate: Date;\r\n    \r\n}","module.exports = \"\"","module.exports = \"<h1>The summary of the details selected by the user is:</h1>\\n\\n<p>\\nMake:  {{summary?.Make}}, \\nModel:  {{summary?.Model}}, \\nYear:  {{summary?.Year}},\\nType:  {{summary?.Type}},\\nFeatures:  {{summary?.Features}},\\nPurchaseDate:  {{summary?.PurchaseDate.toString().substring(0,10)}}\\n</p>\\n<h2>\\n  The discount the user gets is:{{(summary?.PurchaseDate.toString().substring(8,10))%2==0?40:30}}%\\n</h2>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../common/data.service';\n\n@Component({\n  selector: 'app-list-users',\n  templateUrl: './list-users.component.html',\n  styleUrls: ['./list-users.component.css']\n})\nexport class ListUsersComponent implements OnInit {\nsummary:any\n  constructor(private dataService : DataService ) { }\n\n  ngOnInit() {\n    this.dataService.getUserDetail().subscribe(\n      (data:any)=>{\n        console.log(data)\n        this.summary=data.data\n      },\n      err=>{\n        console.log(err)\n      }\n    )\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}